{"version":3,"sources":["component/nav.js","component/latestPosition.js","App.js","serviceWorker.js","index.js"],"names":["Nav","props","state","navList","className","href","src","height","alt","this","map","v","key","style","padding","Component","LatestPosition","top","timer","heightRef","ref","refDom","rollFun","clientHeight","setInterval","Math","abs","Number","setState","clearInterval","onMouseEnter","handleMouseEnter","bind","onMouseLeave","handleMouseLeave","position","i","content","time","title","place","App","type","placeholder","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ab5f46af.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n\nclass Nav extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      navList: [\"首页\", \"社会招聘\", \"了解阿里\", \"个人中心\"]\n    };\n  }\n  render() {\n    return (\n      <div>\n        <div className=\"head\">\n          <div className=\"head-main\">\n            <div className=\"head-menu\">\n              <a\n                href=\"https://job.alibaba.com/zhaopin/index.htm\"\n                className=\"logo\"\n              >\n                <img\n                  className=\"company-logo\"\n                  src=\"https://img.alicdn.com/tfs/TB1Zv8_lxSYBuNjSspjXXX73VXa-390-63.png\"\n                  height=\"20\"\n                  alt=\"\"\n                />\n              </a>\n              <i className=\"logo-line\">|</i>\n              <i className=\"logo-right\">社招官网</i>\n              <ul>\n                {this.state.navList.map(v => {\n                  return <li key={v}>{v}</li>;\n                })}\n                <div className=\"welcome\">\n                  <span>欢迎来到阿里巴巴集团招聘！</span>\n                  <span>\n                    登录\n                    <span style={{ padding: \"0 5px\" }}>|</span>\n                    注册\n                  </span>\n                </div>\n              </ul>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Nav;\n","import React, { Component } from \"react\";\n\nclass LatestPosition extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      top: 0,\n      timer: \"\",\n    };\n    this.heightRef = ref => {\n      this.refDom = ref;\n    };\n  }\n  componentDidMount() {\n    this.rollFun();\n  }\n  rollFun() {\n    const { clientHeight } = this.refDom;\n\n    let timer = setInterval(() => {\n      if (Math.abs(this.state.top) + 250 > Number(clientHeight)) {\n        this.setState({ top: 0 });\n      } else {\n        this.setState({ top: this.state.top + 2 });\n      }\n    }, 100);\n    this.setState({\n      timer: timer\n    });\n  }\n  handleMouseEnter() {\n    clearInterval(this.state.timer);\n  }\n  handleMouseLeave() {\n    this.rollFun();\n  }\n  render() {\n    return (\n      <div className=\"latest-position\">\n        <div className=\"more-positions\">\n          <span>最新职位</span>\n          <span>更多</span>\n        </div>\n        <div\n          className=\"positions-content\"\n          ref={this.heightRef}\n          style={{ top: -this.state.top }}\n          onMouseEnter={this.handleMouseEnter.bind(this)}\n          onMouseLeave={this.handleMouseLeave.bind(this)}\n        >\n          <ul>\n            {this.props.position.map((v, i) => {\n              return (\n                <li key={i}>\n                  <a href=\"www.albb.com\">{v.content}</a>\n                  <em className=\"time\">{v.time}</em>\n                  <em className=\"city\" title=\"北京,杭州\">\n                    {v.place}\n                  </em>\n                </li>\n              );\n            })}\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default LatestPosition;\n","import React, { Component } from \"react\";\nimport \"./App.scss\";\nimport Nav from \"./component/nav\";\nimport LatestPosition from \"./component/latestPosition\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      position: [\n        {\n          content: \"蚂蚁金服-国际技术合规专家\",\n          time: \"30分钟前\",\n          place: \"北京,杭州\"\n        },\n        {\n          content: \"蚂蚁金服-国际技术合规专家\",\n          time: \"30分钟前\",\n          place: \"北京,杭州\"\n        },\n        {\n          content: \"蚂蚁金服-国际技术合规专家\",\n          time: \"30分钟前\",\n          place: \"北京,杭州\"\n        },\n        {\n          content: \"蚂蚁金服-国际技术合规专家\",\n          time: \"30分钟前\",\n          place: \"北京,杭州\"\n        },\n        {\n          content: \"蚂蚁金服-国际技术合规专家\",\n          time: \"30分钟前\",\n          place: \"北京,杭州\"\n        },\n        {\n          content: \"蚂蚁金服-国际技术合规专家\",\n          time: \"30分钟前\",\n          place: \"北京,杭州\"\n        },\n        {\n          content: \"蚂蚁金服-国际技术合规专家\",\n          time: \"30分钟前\",\n          place: \"北京,杭州\"\n        },\n        {\n          content: \"蚂蚁金服-国际技术合规专家\",\n          time: \"30分钟前\",\n          place: \"北京,杭州\"\n        },\n        {\n          content: \"蚂蚁金服-国际技术合规专家\",\n          time: \"30分钟前\",\n          place: \"北京,杭州\"\n        }\n      ]\n    };\n  }\n  render() {\n    return (\n      <div>\n        <Nav />\n        <div className=\"wrap-main\">\n          <div className=\"mask\" />\n          <div className=\"wrap-search\">\n            <div className=\"text-introduction\">\n              <p>If not now, when?</p>\n              <p>If not me, who?</p>\n              <p className=\"chinese\">此时此刻，非我莫属！</p>\n            </div>\n            <div className=\"search-input-wrap\">\n              <div className=\"input-mask\" />\n              <div className=\"input-wrap\">\n                <input type=\"text\" placeholder=\"请输入职位关键词\" />\n                <div className=\"button\">搜索</div>\n              </div>\n            </div>\n            <div className=\"serch-content\">\n              <ul>\n                <li>热门搜索：</li>\n                <li>JAVA</li>\n                <li>IOS</li>\n                <li>数据</li>\n                <li>安全</li>\n                <li>搜索</li>\n                <li>算法</li>\n                <li>运营</li>\n                <li>视觉</li>\n              </ul>\n            </div>\n          </div>\n        </div>\n        <div className=\"newPosition-content\">\n          <LatestPosition position={this.state.position} />\n          <div className=\"newPosition-content-r\">\n            <div className=\"cloud\">\n              <img\n                src=\"https://img.alicdn.com/tfs/TB1Z7JvoxGYBuNjy0FnXXX5lpXa-358-136.png\"\n                alt=\"\"\n              />\n            </div>\n            <div className=\"intelligence\">\n              <img\n                src=\"https://img.alicdn.com/tfs/TB18tFCCH2pK1RjSZFsXXaNlXXa-240-34.svg\"\n                alt=\"\"\n              />\n            </div>\n          </div>\n        </div>\n        <div className=\"footer-content\">\n          <span>阿里巴巴集团 Copyright ©1999-2019 版权所有</span>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}